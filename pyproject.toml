
[tool.poetry]
name = "uh50"
version = "0.1.0"
description = "Read out UltraHeat 50"
authors = ["Berry <berrydenhartog@mailbox.org>"]
license = "Apache-2.0"
readme = "README.rst"

[tool.poetry.dependencies]
python = "^3.9"
pyserial = "^3.5"
Flask = "^3.0.3"
Flask-Caching = "^2.3.0"
pydantic = "^2.7.1"
dateutils = "^0.6.12"
importlib-metadata = "^7.1.0"


[tool.poetry.group.test.dependencies]
pytest = "^8.2.0"
coverage = {extras = ["toml"], version = "^6.4.1"}

[tool.poetry.group.dev.dependencies]
pytest-mock = "^3.8.1"
ruff = "^0.4.3"
pre-commit = "^3.7.0"
pyright = "^1.1.361"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 120
target-version = "py311"
src = ["./uh50", "./tests"]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = ["I", "SIM", "B", "UP", "F", "E", "S", "C90", "DTZ", "LOG", "PIE", "PT", "ERA", "W", "C", "TRY", "RUF"]
fixable = ["ALL"]
task-tags = ["TODO"]

[tool.ruff.lint.mccabe]
max-complexity = 8

[tool.pytest.ini_options]
addopts = "--strict-markers"

markers = [
    "slow"
]
testpaths = [
    "tests"
]

[tool.coverage.run]
branch = true
command_line = "-m pytest"
relative_files = true

[tool.coverage.report]
fail_under = 95
